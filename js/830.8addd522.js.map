{"version":3,"file":"js/830.8addd522.js","mappings":"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","sources":["webpack://frontend_vue3/./node_modules/core-js/internals/an-instance.js","webpack://frontend_vue3/./node_modules/core-js/internals/dom-exception-constants.js","webpack://frontend_vue3/./node_modules/core-js/internals/error-stack-clear.js","webpack://frontend_vue3/./node_modules/core-js/internals/inherit-if-required.js","webpack://frontend_vue3/./node_modules/core-js/internals/normalize-string-argument.js","webpack://frontend_vue3/./node_modules/core-js/internals/to-string.js","webpack://frontend_vue3/./node_modules/core-js/modules/web.dom-exception.stack.js","webpack://frontend_vue3/./node_modules/vue-use-sound/dist/esm/howler-878e393d.js"],"sourcesContent":["var isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw $TypeError('Incorrect invocation');\n};\n","module.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String($Error(arg).stack); })('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(global, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","/*!\n  * vue-use-sound v1.1.1\n  * (c) 2021 Yaël GUILLOUX\n  * @license MIT\n  */\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn) {\n  var module = { exports: {} };\n\treturn fn(module, module.exports), module.exports;\n}\n\n/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\nvar howler = createCommonjsModule(function (module, exports) {\n(function() {\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for CommonJS libraries such as browserify.\n  {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof commonjsGlobal !== 'undefined') {\n    commonjsGlobal.HowlerGlobal = HowlerGlobal;\n    commonjsGlobal.Howler = Howler;\n    commonjsGlobal.Howl = Howl;\n    commonjsGlobal.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n});\n\nvar howler$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.assign(/*#__PURE__*/Object.create(null), howler, {\n\t'default': howler\n}));\n\nexport { howler$1 as h };\n"],"names":["isPrototypeOf","$TypeError","TypeError","module","exports","it","Prototype","IndexSizeError","s","c","m","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","uncurryThis","$Error","Error","replace","TEST","arg","String","stack","V8_OR_CHAKRA_STACK_ENTRY","IS_V8_OR_CHAKRA_STACK","test","dropEntries","prepareStackTrace","isCallable","isObject","setPrototypeOf","$this","dummy","Wrapper","NewTarget","NewTargetPrototype","constructor","prototype","toString","argument","$default","undefined","arguments","length","classof","$String","$","global","getBuiltIn","createPropertyDescriptor","defineProperty","hasOwn","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","DESCRIPTORS","IS_PURE","DOM_EXCEPTION","NativeDOMException","$DOMException","this","DOMExceptionPrototype","argumentsLength","message","name","that","error","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","descriptor","Object","getOwnPropertyDescriptor","BUGGY_DESCRIPTOR","writable","configurable","FORCED_CONSTRUCTOR","forced","DOMException","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","key","constant","constantName","commonjsGlobal","globalThis","window","self","createCommonjsModule","fn","howler","HowlerGlobal","init","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","args","index","indexOf","apply","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","checkIE","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","howler$1","freeze","assign"],"sourceRoot":""}